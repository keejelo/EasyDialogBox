# 1.735.63:
- Updated code so that [X] close button still appear when using class "dlg-disable-heading", it's more user friendly to have a closebutton.
  It is still positioned in rightmost upper corner.

# 1.735.62:
- Added a new shorthand method ".color()" , for setting same color to border and heading.
- Updated documentation

# 1.735.61:
- Improved dragging when using multiple dialogboxes, now drag-function is locked on to the box that is currently being dragged,
  never looses focus of the box until it is dropped. Before, when dragging fast it could sometimes change focus to other boxes
  when dragged over them, and start dragging those instead. Now fixed.

# 1.735.60:
- Moved some height adjustments from method ".show()" and ".height()" to CSS instead of dynamically setting it in JS code.
  Updated the CSS files with the new changes:
  -- Removed: "margin-bottom:25px" from class ".dlg-message"
  -- Changed: "margin-top:10px" to "margin-top:25px" in class ".dlg-footer"
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11.
  (IE9/10 + "dlg-nomodal" + "dlg-multi": Only partial support due to CSS "pointer-events:none" not available in these browser versions.)

# 1.735.59:
- Updated documentation with more examples.
- Updated method "obj.hide()" with optional delay and optional skipping of "obj.hide()" method.
- Minor cleanup
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11.
  (IE9/10 + "dlg-nomodal" + "dlg-multi": Only partial support due to CSS "pointer-events:none" not available in these browser versions.)

# 1.735.57:
- Added flags "dlg-nomodal" and "dlg-multi", also updated the documentation for these.
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11.
  (IE9/10 + "dlg-nomodal" + "dlg-multi": Only partial support due to CSS "pointer-events:none" not available in these browser versions.)

# 1.735.56:
- Minor cleanup after previous version.

# 1.735.55:
- Added a string fixer that corrects "dlg" class strings if containing several spaces, important that they 
  are separated by one space only. This fixes these errors, should they occur.

# 1.735.53/54:
- Improved zindexing when using multiple dialogs, brings dialog to top when clicked on, corrects zindex order.
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11
  (IE9/10 does not support multiple dialogs yet, but everything else works as before)

# 1.735.52:
- Changed drag'n'drop reactivation eventcode (that switches between dialogboxes) from 'click' to 'mouseenter',
  when using several dialogboxes at the same time.
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11
  (IE9-10 does not support multiple dialogs yet, but everything else works as before)

# 1.735.51:
- Now possible to use several dialogboxes at the same time when using "dlg-disable-overlay" (best used together with "dlg-disable-clickout")
  Tested working in Win10 with latest Chrome, Firefox, Edge and IE11
  (IE9/10 does not support multiple dialogs yet, but everything else works as before)

# 1.735.50:
- Did some cleaning

# 1.735.49:
- Fixed a bug in method "myObj.center()"
- Made some methods returning the object itself so they can be cascaded/chained,
  and used for example like this: myObj.width(500).height(300).show();

# 1.735.48:
- Fixed a bug in method "myObj.height()"

# 1.735.47:
- Added a method to center the dialogbox in window: "myObj.center()"

# 1.735.46:
- Added four methods for adjusting the dialogbox size and position:
  myObj.width()
  myObj.height()
  myObj.xPos()
  myObj.yPos()

# 1.735.45:
- Fixed a bug in the internal function "scrollBarFix" that could cause the padding to increase if running
  the function several times when already enabled. This is now corrected.

# 1.735.44:
- Updated/added functions to change dialog bordercolor and heading backgroundcolor.
- Updated the documentation and examples.

# 1.735.43:
Added a fix for the "obj.onCreate" function, it was not firing when defined as a custom function.
It now works, but runs async after "create" function, since the object must first be created for
"obj.onCreate" function to be able to execute.

# 1.735.42:
- Updated inner function that creates the dialog close [X] (top right).
  Using HTML entity instead of unicode, maybe avoid the need to specify unicode charset for javascript ?
  <script src="js/easydlg.js" charset="utf-8"></script>  <--- charset utf-8 not needed ?
- Added a minified version of the sourcefile "easydlg.js" --> "easydlg.min.js" (12 kB) for production use.

# 1.735.41:
- Minor cleanup.

# 1.735.36/.37:
Fixed an error/bug where object did not return its own element.
A line of code had mistakenly been commented out.
Should work now.

# 1.735.35:
Improved responsive-mode a little bit.

# 1.735.33/.34:
Added two more optional classes:
"dlg-disable-esc" which disables the Esc-key for closing the box.
"dlg-disable-clickout" which disables the ability to click outside the box to close it.
More cleanup.

# 1.735.31/.32:
Minor internal fix.

# 1.735.30:
Tried to improve internal function that gets elements inside box.

# 1.735.27:
Did some linting.

# 1.735.25/.26:
Cleanup and minor fixes.

# 1.735.24:
Undid the changes that was done in version 1.735.20 "visual improvement":
Changed back to removing borders when dialogbox is going into responsive-mode.
With borders it was making the horizontal scrollbar appear, and we dont that.
Leave it like this until a better solution is found.

# 1.735.23:
Added a simple way to change color of border + heading background color, just to have some basic UI-style
support. Instead of editing the css file if user only want to change a little color.
Any CSS color value will work.
You can now do this to change colors for border and heading, e.g. to red:
myBox.colorBorder = '#ff0000';
myBox.colorHeading = '#ff0000';

# 1.735.22:
Started cleaning up a little, due to major rewrite of making dialogboxes more DOM present, living their
whole lifecycle in DOM.
(Being careful not to break stuff)

# 1.735.20:
Visual improvement, made dialogbox borders visible when dialogbox goes into "responsiveness" mode,
looks better. Before it looked like something was wrong and buggy.

# 1.735.19:
Bug/error fix:
1. Custom height does now display correctly with and without "dlg-icon" class usage.
2. There was a bug when creating dialog without 'id', the random generated id sometimes was created with
a number as the first character, causing error when selecting elements in the internal functions.
Now fixed by always adding the letter 'a' in front of the random generated id string.

# 1.735.18:
The dialogbox did not display custom position correctly
Seem to have fixed it, need to test it more.

# 1.735.16:
Fixed some errors in function: show()
The dialogbox did not display custom position and size correctly.
Forgot to add a piece of code. Seem to work ok(?) now. (update: still issue with position)

# 1.735.14:
Fixed some errors in internal function: getEl()

# 1.735.12:
- Removed parameter "bKeepAlive" from function: EasyDialogBox.create(...);
  Usage is now: let myObj = EasyDialogBox.create(id, strBoxTypeClass, strTitle, strMessage, fnCallback, x, y, w, h);
- Improved errorchecking.

# 1.735.9, minor update:
Added more errorchecking when using function to get elements:
myObj.$(...);

# 1.735.4, minor update:
Updated the "myObj.$()" function.
Improved element selection, in addition to the already existing ways, you can now do:
myBox.$('#someID p input.myFormData');

# 1.735, changes and new things:
- Dialogboxes are now created in DOM and memory at once with the "EasyDialogBox.create()" function.
  ( Before dialogbox was only created in memory, and the DOM element was created with "obj.show()" )

- Added a "hide" function that hides the dialogbox when doing: myObj.hide();
  It will still exist in DOM, but hidden with css.
  This function also fires: myObj.onHide();

- Dialogboxes now hides in DOM when closing the box by clicking "Close", "X", pressing "ESC" key,
  they are NOT destroyed from DOM and memory like the previous versions was.
  
  All dialogboxs will be kept alive by default, they are only destroyed when the user executes the 
  "destroy" function: myObj.destroy();
  The user is now responsible for deleting/destroying the dialogbox objects to prevent DOM-fill and memory leaks.
  
  Tip: By specifying an ID when creating a box, the existing box are reused when hiding and showing, instead of
  a new box being created each time the box is hidden and shown, filling up the DOM and leak memory
  if not destroyed.    
  (The variable "bKeepAlive" might be obsolete, and maybe removed in future versions)

- Added ways to get the dialogbox element itself and the elements inside, using these shorthand methods:
  myObj.el;               // returns the dialogbox HTML element itself
  myObj.$();              // using () blank, returns the dialogbox HTML element itself
  myObj.$('#someID');     // using # (hash), returns the HTML element containing the specified ID
  myObj.$('.someClass');  // using . (dot), returns an indexed HTMLCollection ([i] as normal)
  myObj.$('someElement'); // returns an indexed HTMLCollection ([i] as normal)
  ..similar to .querySelectorAll()

# 1.722 and above, important changes:
The "classflags" below has had their names changed due to naming ambiguity causing bugs:
"dlg-no-drag" is now called "dlg-disable-drag"
"dlg-no-btns" is now called "dlg-disable-btns"
"dlg-no-overlay" is now called "dlg-disable-overlay"
"dlg-no-footer" is now called "dlg-disable-footer"
