---------------------------------------------------------------------------------------------------------
Version 1.735.4, minor update:
---------------------------------------------------------------------------------------------------------

Updated the "myObj.$()" function.
Even better element selection, in addition to the already existing ways, you can now do:
"myBox.$(\'#myDlgBox p input.myFormData\')[0];"
if you wanted to.



---------------------------------------------------------------------------------------------------------
Version 1.735, changes and new things:
---------------------------------------------------------------------------------------------------------

-> Dialogboxes are now created in DOM and memory at once with the "EasyDialogBox.create()" function.
   ( Before dialogbox was only created in memory, and the DOM element was created with "obj.show()" )

---------------------------------------------------------------------------------------------------------

-> Added a "hide" function that hides the dialogbox when doing: myObj.hide();
   It will still exist in DOM, but hidden with css.
   This function also fires: myObj.onHide();

---------------------------------------------------------------------------------------------------------

-> Dialogboxes now hides in DOM when closing the box by clicking "Close", "X", pressing "ESC" key,
   they are NOT destroyed from DOM and memory like the previous versions was.
  
   All dialogboxs will be kept alive by default, they are only destroyed when the user executes the 
   "destroy" function: myObj.destroy();
   The user is now responsible for deleting/destroying the dialogbox objects to prevent DOM-fill and memory leaks.
  
   Tip: By specifying an ID when creating a box, the existing box are reused when hiding and showing, instead of
   a new box being created each time the box is hidden and shown, filling up the DOM and leak memory
   if not destroyed.  
  
   (The variable "bKeepAlive" might be obsolete, and maybe removed in future versions)

---------------------------------------------------------------------------------------------------------

-> Added ways to get the dialogbox element itself and the elements inside, using these shorthand methods:

   myObj.el;               // returns the dialogbox HTML element itself
   
   myObj.$();              // using () blank, returns the dialogbox HTML element itself
  
   myObj.$('#someID');     // using # (hash), returns the HTML element containing the specified ID
   
   myObj.$('.someClass');  // using . (dot), returns an indexed HTMLCollection ([i] as normal)
  
   myObj.$('someElement'); // returns an indexed HTMLCollection ([i] as normal)
  
   ..similar to .getElementById() and .querySelectorAll()
   
---------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------
Version 1.722 and above, important changes:
---------------------------------------------------------------------------------------------------------

The "classflags" below has had their names changed due to naming ambiguity causing bugs:

"dlg-no-drag" is now called "dlg-disable-drag"

"dlg-no-btns" is now called "dlg-disable-btns"

"dlg-no-overlay" is now called "dlg-disable-overlay"

"dlg-no-footer" is now called "dlg-disable-footer"

---------------------------------------------------------------------------------------------------------

