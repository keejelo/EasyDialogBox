//-----------------------------------------------------------------------------------------------------------------
// ** EasyDialogBox
// ** Version: 1.658
// ** Created by: Kee J. Elo
// ** Year: 2020
// ** GitHub: https://github.com/keejelo/EasyDialogBox
//-----------------------------------------------------------------------------------------------------------------
const EasyDialogBox=(function()
{'use strict';const DEBUG=true;let _btnTextClose='Close';let _btnTextYes='Yes';let _btnTextNo='No';let _btnTextOk='OK';let _btnTextCancel='Cancel';const CLOSE=0;const YES=1;const NO=2;const OK=3;const CANCEL=4;const _strBoxTypeList=['dlg','dlg-close','dlg-prompt','dlg-yes','dlg-no','dlg-yes-no','dlg-ok','dlg-cancel','dlg-ok-cancel','dlg-no-footer','dlg-no-btns','dlg-no-overlay','dlg-no-drag','dlg-info','dlg-question','dlg-error','dlg-success','dlg-exclamation'];let _boxObj=[];let _orgBodyPaddingRight=0;let _isActive=false;const _log=function(str)
{if(DEBUG)
{return console.log(str);}};const _str2dec=function(str)
{return parseInt(str,10);};const _getObjFromId=function(arr,strId)
{for(let i=0;i<arr.length;i++)
{if(arr[i].id===strId)
{return arr[i];}}
return null;};const _matchAll=function(arr,str,exp,sep)
{let val=str;if(exp===true)
{if(typeof sep==='undefined')
{sep=' ';}
val=str.split(sep);}
let passed=0;for(let i=0;i<val.length;i++)
{for(let j=0;j<arr.length;j++)
{if(arr[j]===val[i])
{passed++;}}}
if(val.length===passed)
{return true;}
return false;};const _sanitize=function(str)
{str=str.replace(/[^a-z0-9@£#\s\,._-æøåäö-]/gi,'');return str;};const _escape=function(str)
{str=str.trim();str=str.replace(/&/g,'&amp;');str=str.replace(/'/g,'&#39;');str=str.replace(/"/g,'&quot;');str=str.replace(/</g,'&lt;');str=str.replace(/>/g,'&gt;');return str;};const _htmlEncode=function(str)
{return String(str).replace(/[^\w. ]/gi,function(c)
{return'&#'+c.charCodeAt(0)+';';});};const _adjustElSizePos=function(id)
{let el=document.getElementById(id);if(el)
{if(el.offsetHeight>=window.innerHeight)
{el.style.top='0';el.style.marginTop='0';el.style.marginBottom='0';el.style.height='';el.style.maxHeight='';}
else
{if(!el.customPosY)
{el.style.top=((window.innerHeight/2)-(el.offsetHeight/2))+'px';}
else
{el.style.top=el.customPosY+'px';}
if(el.customHeight)
{el.style.height=el.customHeight+'px';}}
let overlap=50;if((_str2dec(el.offsetWidth+el.offsetLeft+_orgBodyPaddingRight+overlap)>=window.innerWidth))
{el.style.left='0';el.style.marginLeft='0';el.style.marginRight='0';el.style.width='';el.style.maxWidth='';}
else
{if(!el.customPosX)
{el.style.left=((window.innerWidth/2)-(el.offsetWidth/2))+'px';}
else
{el.style.left=el.customPosX+'px';}
if(el.customWidth)
{el.style.maxWidth=el.customWidth+'px';}}}};const _show=function(objId)
{let obj=_getObjFromId(_boxObj,objId);if(obj===null)
{objId+='_0';obj=_getObjFromId(_boxObj,objId);}
let body=document.getElementsByTagName('body')[0];let dlg=document.createElement('div');dlg.setAttribute('id',obj.id);dlg.setAttribute('class',obj.strTypeClass);body.appendChild(dlg);let matched=null;if(dlg)
{matched=_matchAll(_strBoxTypeList,obj.strTypeClass,true);}
dlg.style.display='block';if(dlg&&(_isActive===false)&&(matched===true))
{let box=document.createElement('div');box.setAttribute('id',obj.id+'_1');box.setAttribute('class','dlg-box');box.customPosX=0;box.customPosY=0;box.customHeight=0;box.customWidth=0;if(obj.x)
{box.style.left=_str2dec(obj.x)+'px';box.customPosX=_str2dec(obj.x);}
if(obj.y)
{box.style.top=_str2dec(obj.y)+'px';box.customPosY=_str2dec(obj.y);}
if(obj.w)
{box.style.maxWidth=_str2dec(obj.w)+'px';box.customWidth=_str2dec(obj.w);}
if(obj.h)
{box.style.height=_str2dec(obj.h)+'px';box.customHeight=_str2dec(obj.h);}
dlg.appendChild(box);let heading=document.createElement('div');heading.setAttribute('id',obj.id+'_1_heading');heading.setAttribute('class','dlg-heading');box.appendChild(heading);let closeX=document.createElement('span');closeX.setAttribute('class','dlg-close-x');let closeText=document.createTextNode(' \u00d7 ');closeX.appendChild(closeText);heading.appendChild(closeX);let titleText=document.createTextNode(obj.strTitle);heading.appendChild(titleText);let message=document.createElement('div');let leftbox=null;let rightbox=null;if(dlg.classList.contains('dlg-info')||dlg.classList.contains('dlg-question')||dlg.classList.contains('dlg-error')||dlg.classList.contains('dlg-success')||dlg.classList.contains('dlg-exclamation'))
{message.setAttribute('class','dlg-message dlg-flex-container');if(box.customHeight)
{message.style.height=_str2dec(obj.h-101)+'px';}
leftbox=document.createElement('div');leftbox.setAttribute('class','dlg-flexbox-left');if(dlg.classList.contains('dlg-info'))
{leftbox.innerHTML='<div class="dlg-symbol dlg-icon-info"></div>';}
else if(dlg.classList.contains('dlg-question'))
{leftbox.innerHTML='<div class="dlg-symbol dlg-icon-question"></div>';}
else if(dlg.classList.contains('dlg-error'))
{leftbox.innerHTML='<div class="dlg-symbol dlg-icon-error"></div>';}
else if(dlg.classList.contains('dlg-success'))
{leftbox.innerHTML='<div class="dlg-symbol dlg-icon-success"></div>';}
else if(dlg.classList.contains('dlg-exclamation'))
{leftbox.innerHTML='<div class="dlg-symbol dlg-icon-excl"></div>';}
message.appendChild(leftbox);rightbox=document.createElement('div');rightbox.setAttribute('class','dlg-flexbox-right');rightbox.innerHTML=obj.strMessage;message.appendChild(rightbox);}
else
{message.setAttribute('class','dlg-message');message.innerHTML=obj.strMessage;if(box.customHeight)
{message.style.height=_str2dec(obj.h-130)+'px';}}
box.appendChild(message);if(dlg.classList.contains('dlg-prompt'))
{let inputbox=document.createElement('div');inputbox.setAttribute('class','dlg-input');if(message.classList.contains('dlg-flex-container'))
{rightbox.appendChild(inputbox);}
else
{message.appendChild(inputbox);}
let input=document.createElement('input');input.setAttribute('class','dlg-input-field');input.setAttribute('type','text');input.setAttribute('value',obj.strInput);inputbox.appendChild(input);dlg.classList.add('dlg-ok-cancel');}
if(!dlg.classList.contains('dlg-no-footer'))
{let footer=document.createElement('div');footer.setAttribute('class','dlg-footer');box.appendChild(footer);if(!dlg.classList.contains('dlg-no-btns'))
{if(dlg.classList.contains('dlg-yes')||dlg.classList.contains('dlg-yes-no'))
{let yesBtn=document.createElement('button');yesBtn.setAttribute('class','dlg-yes-btn');let yesBtnText=document.createTextNode(_btnTextYes);yesBtn.appendChild(yesBtnText);footer.appendChild(yesBtn);}
if(dlg.classList.contains('dlg-no')||dlg.classList.contains('dlg-yes-no'))
{let noBtn=document.createElement('button');noBtn.setAttribute('class','dlg-no-btn');let noBtnText=document.createTextNode(_btnTextNo);noBtn.appendChild(noBtnText);footer.appendChild(noBtn);}
if(dlg.classList.contains('dlg-ok')||dlg.classList.contains('dlg-ok-cancel'))
{let okBtn=document.createElement('button');okBtn.setAttribute('class','dlg-ok-btn');let okBtnText=document.createTextNode(_btnTextOk);okBtn.appendChild(okBtnText);footer.appendChild(okBtn);}
if(dlg.classList.contains('dlg-cancel')||dlg.classList.contains('dlg-ok-cancel'))
{let cancelBtn=document.createElement('button');cancelBtn.setAttribute('class','dlg-cancel-btn');let cancelBtnText=document.createTextNode(_btnTextCancel);cancelBtn.appendChild(cancelBtnText);footer.appendChild(cancelBtn);}
if(dlg.classList.contains('dlg')||dlg.classList.contains('dlg-close'))
{let closeBtn=document.createElement('button');closeBtn.setAttribute('class','dlg-close-btn');let closeBtnText=document.createTextNode(_btnTextClose);closeBtn.appendChild(closeBtnText);footer.appendChild(closeBtn);}}}
_orgBodyPaddingRight=window.getComputedStyle(body,null).getPropertyValue('padding-right');_orgBodyPaddingRight=_str2dec(_orgBodyPaddingRight);let w1=body.offsetWidth;body.classList.add('dlg-stop-scrolling');let w2=body.offsetWidth;let w3=w2-w1;if(typeof _orgBodyPaddingRight==='number'&&_orgBodyPaddingRight>0)
{w3+=_str2dec(_orgBodyPaddingRight);}
body.setAttribute('style','padding-right:'+w3+'px;');window.addEventListener('resize',function WinResize()
{_adjustElSizePos(box.id);});let xCloseDialog=dlg.getElementsByClassName('dlg-close-x')[0];if(xCloseDialog)
{xCloseDialog.addEventListener('click',function XCloseClick()
{xCloseDialog.removeEventListener('click',XCloseClick);obj.destroy();obj.callback(CLOSE);});}
let btnCloseDialog=dlg.getElementsByClassName('dlg-close-btn')[0];if(btnCloseDialog)
{btnCloseDialog.addEventListener('click',function BtnCloseClick()
{btnCloseDialog.removeEventListener('click',BtnCloseClick);obj.destroy();obj.callback(CLOSE);});}
window.addEventListener('click',function WinCloseClick(evt)
{if(evt.target==dlg)
{window.removeEventListener('click',WinCloseClick);obj.destroy();obj.callback(CLOSE);}});if(dlg.classList.contains('dlg-yes-no')||dlg.classList.contains('dlg-yes')||dlg.classList.contains('dlg-no'))
{let btnYesDialog=dlg.getElementsByClassName('dlg-yes-btn')[0];if(btnYesDialog)
{btnYesDialog.addEventListener('click',function BtnYesClick()
{btnYesDialog.removeEventListener('click',BtnYesClick);obj.destroy();obj.callback(YES);});}
let btnNoDialog=dlg.getElementsByClassName('dlg-no-btn')[0];if(btnNoDialog)
{btnNoDialog.addEventListener('click',function BtnNoClick()
{btnNoDialog.removeEventListener('click',BtnNoClick);obj.destroy();obj.callback(NO);});}}
if(dlg.classList.contains('dlg-ok-cancel')||dlg.classList.contains('dlg-ok')||dlg.classList.contains('dlg-cancel'))
{let btnOkDialog=dlg.getElementsByClassName('dlg-ok-btn')[0];if(btnOkDialog)
{btnOkDialog.addEventListener('click',function BtnOkClick()
{btnOkDialog.removeEventListener('click',BtnOkClick);obj.destroy();obj.callback(OK);});}
let btnCancelDialog=dlg.getElementsByClassName('dlg-cancel-btn')[0];if(btnCancelDialog)
{btnCancelDialog.addEventListener('click',function BtnCancelClick()
{btnCancelDialog.removeEventListener('click',BtnCancelClick);obj.destroy();obj.callback(CANCEL);});}}
let pBox=dlg.getElementsByClassName('dlg-input-field')[0];if(pBox)
{pBox.addEventListener('keyup',function PromptBoxKeyUp()
{obj.strInput=_sanitize(pBox.value);});pBox.addEventListener('change',function PromptBoxChange()
{obj.strInput=_sanitize(pBox.value);});}
_isActive=true;if(!dlg.classList.contains('dlg-no-drag'))
{_drag.init(obj.id+'_1');}
box.style.visibility='visible';_adjustElSizePos(box.id);if(dlg.classList.contains('dlg-prompt'))
{dlg.getElementsByClassName('dlg-input-field')[0].focus();}
return true;}
else if(!matched)
{_log('DEBUG: show(): Error, dialogbox type not defined or not a valid type: '+obj.strTypeClass);}
else if(_isActive)
{_log('DEBUG: show(): Error, a box is already in view! Can only show one dialogbox at a time!');}
else if(!dlg)
{_log('DEBUG: show(): Error, element id \''+objId+'\' do not exist!\nReturned value = '+dlg);}
else
{_log('DEBUG: show(): Unknown error!');}
return false;};const _destroy=function(objId)
{let success=false;let body=document.getElementsByTagName('body')[0];body.classList.remove('dlg-stop-scrolling');body.setAttribute('style','padding-right:'+_str2dec(_orgBodyPaddingRight)+'px;');let dlg=document.getElementById(objId);if(dlg)
{dlg.style.display='none';}
let pBox=dlg.getElementsByClassName('dlg-input-field')[0];if(pBox)
{pBox.onkeyup=null;pBox.onchange=null;}
if(dlg)
{dlg.parentNode.removeChild(dlg);let obj=_getObjFromId(_boxObj,objId);if(!obj.bKeepAlive)
{let index=_boxObj.indexOf(obj);if(index>-1)
{setTimeout(function()
{let wasDeleted=_boxObj.splice(index,1);if(wasDeleted.length===1)
{success=true;_log('DEBUG: destroy(): obj.bKeepAlive = false | Object deleted from array');}
else
{success=false;_log('DEBUG: destroy(): Error! obj.bKeepAlive = false | But object NOT deleted from array!');}},1);}
else
{_log('DEBUG: destroy(): Error, object not found in array!');success=false;}}
else if(obj.bKeepAlive)
{_log('DEBUG: destroy(): obj.bKeepAlive = true | Object not deleted from array');success=false;}}
_isActive=false;return success;};const _create=function(strId,strTypeClass,strTitle,strMessage,fnCallback,bKeepAlive,x,y,w,h)
{let matched=_matchAll(_strBoxTypeList,strTypeClass,true);if(matched===true)
{if(strId===''||typeof strId==='undefined'||strId===null||strId===0)
{strId=Math.random().toString(36).substr(2,9);}
strId+='_0';if(typeof fnCallback==='undefined')
{fnCallback=false;}
if(typeof bKeepAlive==='undefined')
{bKeepAlive=false;}
let obj={id:strId,strTypeClass:strTypeClass,strTitle:strTitle,strMessage:strMessage,bKeepAlive:bKeepAlive,strInput:'',nRetCode:-1,x:x,y:y,w:w,h:h,callback:function(a,b)
{try
{if(typeof a==='undefined')
{a=this.nRetCode;}
if(typeof b==='undefined')
{b=this.strInput;}
if(typeof window[fnCallback]==='function')
{window[fnCallback](a,b);}
else if(typeof fnCallback==='function')
{fnCallback(a,b);}
else if(fnCallback===false||fnCallback===0)
{return false;}
else
{_log('typeof fnCallback = '+typeof fnCallback+' and not a function.');_log('Scope? Possible solution can be to use "hoisting".');_log('Try to use "var callbackFuncName = function(a,b){}" instead of "let callbackFuncName = function(a,b){}"');_log('..or declare the callback function before the module "EasyDialogBox" is initialized');}}
catch(err)
{_log('CALLBACK: Error! '+err);}},show:function()
{return _show(this.id);},destroy:function()
{return _destroy(this.id);}}
_boxObj.push(obj);return obj;}
else
{_log('DEBUG: create(): Error, dialogbox type not defined or not a valid type: '+strTypeClass);}
return null;};const _init=function()
{window.addEventListener('load',function LoadWindow()
{let btns=document.getElementsByClassName('dlg-opener');for(let i=0;i<btns.length;i++)
{let dlg=document.getElementById(btns[i].getAttribute('rel'));let obj=_create(dlg.getAttribute('id'),dlg.getAttribute('class'),dlg.getAttribute('title'),dlg.innerHTML,dlg.getAttribute('name'),true,dlg.getAttribute('x'),dlg.getAttribute('y'),dlg.getAttribute('w'),dlg.getAttribute('h'));btns[i].addEventListener('click',function DlgOpenerClick(evt)
{obj.show();this.blur();evt.preventDefault();evt.stopPropagation();});}});};const _drag={init:function(id)
{_drag.el=document.getElementById(id);_drag.el.grabber=document.getElementById(id+'_heading');if(_drag.el.grabber===null)
{_drag.el.grabber=_drag.el;}
_drag.el.style.position='absolute';_drag.el.grabber.addEventListener('mousedown',_drag.start);},start:function(evt)
{if(evt.button===0)
{evt.preventDefault();_drag.el.grabber.style.cursor='move';_drag.el.posX2=evt.clientX;_drag.el.posY2=evt.clientY;document.addEventListener('mouseup',_drag.stop);document.addEventListener('mousemove',_drag.move);}},stop:function()
{_drag.el.grabber.style.cursor='';document.removeEventListener('mouseup',_drag.stop);document.removeEventListener('mousemove',_drag.move);},move:function(evt)
{evt.preventDefault();_drag.el.posX=_drag.el.posX2-evt.clientX;_drag.el.posY=_drag.el.posY2-evt.clientY;_drag.el.posX2=evt.clientX;_drag.el.posY2=evt.clientY;_drag.el.style.top=parseInt((_drag.el.offsetTop)-(_drag.el.posY))+'px';_drag.el.style.left=parseInt((_drag.el.offsetLeft)-(_drag.el.posX))+'px';}};return{create:function(strId,strTypeClass,strTitle,strMessage,fnCallback,bKeepAlive)
{return _create(strId,strTypeClass,strTitle,strMessage,fnCallback,bKeepAlive);},getAll:function()
{return _boxObj;},getById:function(id)
{return _getObjFromId(_boxObj,id);},init:function()
{return _init();}}})();(function(){EasyDialogBox.init();})();
